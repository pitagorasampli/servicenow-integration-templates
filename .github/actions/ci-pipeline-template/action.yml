name: 'CI Pipeline Template'
description: 'A reusable action for CI pipeline'

inputs:
  PROJETO:
    description: 'Nome do projeto'
    required: true
  SERVICO:
    description: 'Nome do serviço'
    required: true
  DEFAULT_APROVADOR_EMAIL:
    description: 'Email do aprovador padrão'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Set variables
      run: |
        echo "PROJETO=${{ inputs.PROJETO }}" >> $GITHUB_ENV
        echo "SERVICO=${{ inputs.SERVICO }}" >> $GITHUB_ENV
        echo "DEFAULT_APROVADOR_EMAIL=${{ inputs.DEFAULT_APROVADOR_EMAIL }}" >> $GITHUB_ENV
      shell: bash

    - name: Fetch last merged PR details
      id: fetch_pr_details
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PR_RESPONSE=$(gh pr list --repo ${{ github.repository }} --state merged --json number --jq '.[0]')
        PR_NUMBER=$(echo $PR_RESPONSE | jq -r '.number')
        
        echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
      shell: bash

    - name: Fetch PR approver email
      id: fetch_approver_email
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        REVIEWERS_RESPONSE=$(gh pr review --repo ${{ github.repository }} $PR_NUMBER --json user,state --jq '.[] | select(.state=="APPROVED") | .user.login')
        
        if [ -z "$REVIEWERS_RESPONSE" ]; then
          APROVADOR_EMAIL="${{ inputs.DEFAULT_APROVADOR_EMAIL }}"
        else
          APROVADOR_EMAIL=$(gh api --method GET "users/$REVIEWERS_RESPONSE" --jq '.email')
        fi

        echo "Aprovador utilizado: $APROVADOR_EMAIL"
        echo "APROVADOR_EMAIL=$APROVADOR_EMAIL" >> $GITHUB_ENV
      shell: bash

    - name: Send information to ServiceNow
      run: |
        ENDPOINT="https://fgmrso3b56.execute-api.us-east-1.amazonaws.com/servicenow/release"
        LINK_EXTERNO="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

        PAYLOAD=$(cat <<EOF
        {
          "origemCriacao": "GitHub Actions",
          "abertoPor": "${{ github.actor }}",
          "aprovadoPor": "$APROVADOR_EMAIL",
          "trem": "chatbot",
          "grupo": "Projetos",
          "classificacao": "Manutenção Corretiva",
          "servico": "Pós-graduação",
          "aplicativo": "Cosmos-ERP",
          "itemConfiguracao": "$SERVICO",
          "bu": "Cogna",
          "origemRelease": "Outros",
          "outros": "GitHub Actions",
          "titulo": "Build ${{ github.run_id }}",
          "descricao": "Descrição detalhada do build ${{ github.run_id }}",
          "inicioReal": "${{ github.event.workflow_run.created_at }}",
          "terminoReal": "${{ github.event.workflow_run.updated_at }}",
          "fechamento": "Encerrada com sucesso",
          "linkExterno": "$LINK_EXTERNO"
        }
        EOF
        )

        echo "Payload to be sent:"
        echo "$PAYLOAD"

        curl -X POST "$ENDPOINT" \
             -H "Content-Type: application/json" \
             -d "$PAYLOAD"
      shell: bash

